<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="8" total="22" passed="10" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-20T15:06:45 IST" name="Suite" finished-at="2025-06-20T15:07:50 IST" duration-ms="65194">
    <groups>
    </groups>
    <test started-at="2025-06-20T15:06:45 IST" name="Test3" finished-at="2025-06-20T15:07:04 IST" duration-ms="19414">
      <class name="com.saucelab.test.TestClass1">
        <test-method is-config="true" signature="initializeExtentReport()[pri:0, instance:com.saucelab.test.TestClass1@1623b78d]" started-at="2025-06-20T15:06:45 IST" name="initializeExtentReport" finished-at="2025-06-20T15:06:45 IST" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeExtentReport -->
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.saucelab.test.TestClass1@1623b78d]" started-at="2025-06-20T15:06:45 IST" name="setupLogger" finished-at="2025-06-20T15:06:45 IST" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method is-config="true" signature="setUpEnv(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.saucelab.test.TestClass1@1623b78d]" started-at="2025-06-20T15:06:45 IST" name="setUpEnv" finished-at="2025-06-20T15:06:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpEnv -->
        <test-method signature="doLogin(java.util.HashMap)[pri:0, instance:com.saucelab.test.TestClass1@1623b78d]" started-at="2025-06-20T15:06:45 IST" name="doLogin" data-provider="getData" finished-at="2025-06-20T15:06:53 IST" duration-ms="7504" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{runmode=y, password=secret_sauce, test_name=To verify Login feature is working fine, username=standard_user}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.saucelab.test.TestClass1@1623b78d]" started-at="2025-06-20T15:06:53 IST" name="quitBrowser" finished-at="2025-06-20T15:06:55 IST" duration-ms="2204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.saucelab.test.TestClass1@1623b78d]" started-at="2025-06-20T15:06:55 IST" name="removeLogger" finished-at="2025-06-20T15:06:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
        <test-method is-config="true" signature="setUpEnv(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.saucelab.test.TestClass1@1623b78d]" started-at="2025-06-20T15:06:55 IST" name="setUpEnv" finished-at="2025-06-20T15:06:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpEnv -->
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.saucelab.test.TestClass1@1623b78d]" started-at="2025-06-20T15:06:55 IST" name="setupLogger" finished-at="2025-06-20T15:06:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method signature="doLogin(java.util.HashMap)[pri:0, instance:com.saucelab.test.TestClass1@1623b78d]" started-at="2025-06-20T15:06:55 IST" name="doLogin" data-provider="getData" finished-at="2025-06-20T15:07:02 IST" duration-ms="7254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{runmode=y, password=secret_sauce, test_name=To verify Login feature is working fine, username=visual_user}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.saucelab.test.TestClass1@1623b78d]" started-at="2025-06-20T15:07:02 IST" name="quitBrowser" finished-at="2025-06-20T15:07:04 IST" duration-ms="2149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.saucelab.test.TestClass1@1623b78d]" started-at="2025-06-20T15:07:04 IST" name="removeLogger" finished-at="2025-06-20T15:07:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
        <test-method is-config="true" signature="flushExtentReport()[pri:0, instance:com.saucelab.test.TestClass1@1623b78d]" started-at="2025-06-20T15:07:50 IST" name="flushExtentReport" finished-at="2025-06-20T15:07:50 IST" duration-ms="269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushExtentReport -->
      </class> <!-- com.saucelab.test.TestClass1 -->
    </test> <!-- Test3 -->
    <test started-at="2025-06-20T15:06:45 IST" name="Test2" finished-at="2025-06-20T15:07:06 IST" duration-ms="21151">
      <class name="com.saucelab.test.TestClass1">
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.saucelab.test.TestClass1@2b662a77]" started-at="2025-06-20T15:06:45 IST" name="setupLogger" finished-at="2025-06-20T15:06:45 IST" duration-ms="534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method signature="doLogin(java.util.HashMap)[pri:0, instance:com.saucelab.test.TestClass1@2b662a77]" started-at="2025-06-20T15:06:45 IST" name="doLogin" data-provider="getData" finished-at="2025-06-20T15:06:55 IST" duration-ms="9826" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{runmode=y, password=secret_sauce, test_name=To verify Login feature is working fine, username=standard_user}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="setUpEnv(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.saucelab.test.TestClass1@2b662a77]" started-at="2025-06-20T15:06:45 IST" name="setUpEnv" finished-at="2025-06-20T15:06:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpEnv -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.saucelab.test.TestClass1@2b662a77]" started-at="2025-06-20T15:06:55 IST" name="quitBrowser" finished-at="2025-06-20T15:06:57 IST" duration-ms="1600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method signature="doLogin(java.util.HashMap)[pri:0, instance:com.saucelab.test.TestClass1@2b662a77]" started-at="2025-06-20T15:06:57 IST" name="doLogin" data-provider="getData" finished-at="2025-06-20T15:07:04 IST" duration-ms="7175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{runmode=y, password=secret_sauce, test_name=To verify Login feature is working fine, username=visual_user}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.saucelab.test.TestClass1@2b662a77]" started-at="2025-06-20T15:06:57 IST" name="setupLogger" finished-at="2025-06-20T15:06:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.saucelab.test.TestClass1@2b662a77]" started-at="2025-06-20T15:06:57 IST" name="removeLogger" finished-at="2025-06-20T15:06:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
        <test-method is-config="true" signature="setUpEnv(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.saucelab.test.TestClass1@2b662a77]" started-at="2025-06-20T15:06:57 IST" name="setUpEnv" finished-at="2025-06-20T15:06:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpEnv -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.saucelab.test.TestClass1@2b662a77]" started-at="2025-06-20T15:07:04 IST" name="quitBrowser" finished-at="2025-06-20T15:07:06 IST" duration-ms="1947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.saucelab.test.TestClass1@2b662a77]" started-at="2025-06-20T15:07:06 IST" name="removeLogger" finished-at="2025-06-20T15:07:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
      </class> <!-- com.saucelab.test.TestClass1 -->
    </test> <!-- Test2 -->
    <test started-at="2025-06-20T15:06:45 IST" name="Test1" finished-at="2025-06-20T15:07:50 IST" duration-ms="65194">
      <class name="com.saucelab.test.TestClass1">
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.saucelab.test.TestClass1@42e99e4a]" started-at="2025-06-20T15:06:45 IST" name="setupLogger" finished-at="2025-06-20T15:06:45 IST" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method is-config="true" signature="setUpEnv(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.saucelab.test.TestClass1@42e99e4a]" started-at="2025-06-20T15:06:45 IST" name="setUpEnv" finished-at="2025-06-20T15:06:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpEnv -->
        <test-method signature="doLogin(java.util.HashMap)[pri:0, instance:com.saucelab.test.TestClass1@42e99e4a]" started-at="2025-06-20T15:06:45 IST" name="doLogin" data-provider="getData" finished-at="2025-06-20T15:06:51 IST" duration-ms="6040" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{runmode=y, password=secret_sauce, test_name=To verify Login feature is working fine, username=standard_user}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.saucelab.test.TestClass1@42e99e4a]" started-at="2025-06-20T15:06:51 IST" name="quitBrowser" finished-at="2025-06-20T15:06:52 IST" duration-ms="517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.saucelab.test.TestClass1@42e99e4a]" started-at="2025-06-20T15:06:52 IST" name="removeLogger" finished-at="2025-06-20T15:06:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.saucelab.test.TestClass1@42e99e4a]" started-at="2025-06-20T15:06:52 IST" name="setupLogger" finished-at="2025-06-20T15:06:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method signature="doLogin(java.util.HashMap)[pri:0, instance:com.saucelab.test.TestClass1@42e99e4a]" started-at="2025-06-20T15:06:52 IST" name="doLogin" data-provider="getData" finished-at="2025-06-20T15:06:57 IST" duration-ms="4961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{runmode=y, password=secret_sauce, test_name=To verify Login feature is working fine, username=visual_user}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="setUpEnv(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.saucelab.test.TestClass1@42e99e4a]" started-at="2025-06-20T15:06:52 IST" name="setUpEnv" finished-at="2025-06-20T15:06:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpEnv -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.saucelab.test.TestClass1@42e99e4a]" started-at="2025-06-20T15:06:57 IST" name="quitBrowser" finished-at="2025-06-20T15:06:57 IST" duration-ms="294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.saucelab.test.TestClass1@42e99e4a]" started-at="2025-06-20T15:06:57 IST" name="removeLogger" finished-at="2025-06-20T15:06:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
      </class> <!-- com.saucelab.test.TestClass1 -->
      <class name="com.saucelab.test.FailedTestClass">
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.saucelab.test.FailedTestClass@4a94ee4]" started-at="2025-06-20T15:06:57 IST" name="setupLogger" finished-at="2025-06-20T15:06:57 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method signature="testFail()[pri:0, instance:com.saucelab.test.FailedTestClass@4a94ee4]" started-at="2025-06-20T15:06:57 IST" name="testFail" finished-at="2025-06-20T15:07:01 IST" duration-ms="3921" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Deliberate fail expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Deliberate fail expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertFalse(Assert.java:78)
at com.saucelab.test.FailedTestClass.testFail(FailedTestClass.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFail -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.saucelab.test.FailedTestClass@4a94ee4]" started-at="2025-06-20T15:07:01 IST" name="quitBrowser" finished-at="2025-06-20T15:07:02 IST" duration-ms="862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.saucelab.test.FailedTestClass@4a94ee4]" started-at="2025-06-20T15:07:02 IST" name="removeLogger" finished-at="2025-06-20T15:07:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
      </class> <!-- com.saucelab.test.FailedTestClass -->
      <class name="com.practice.rough.FirstTest1">
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.practice.rough.FirstTest1@4cc451f2]" started-at="2025-06-20T15:07:02 IST" name="setupLogger" finished-at="2025-06-20T15:07:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.practice.rough.FirstTest1@4cc451f2]" started-at="2025-06-20T15:07:02 IST" name="setupLogger" finished-at="2025-06-20T15:07:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method signature="doLogin(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.practice.rough.FirstTest1@4cc451f2]" started-at="2025-06-20T15:07:02 IST" name="doLogin" data-provider="getData" finished-at="2025-06-20T15:07:07 IST" duration-ms="5087" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method signature="doLogin(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.practice.rough.FirstTest1@4cc451f2]" started-at="2025-06-20T15:07:02 IST" name="doLogin" data-provider="getData" finished-at="2025-06-20T15:07:20 IST" duration-ms="17728" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_savisual_useruce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: .app_logo
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.32.0', revision: 'd17c8aa950'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [e63d9f1f-b08e-4562-870e-f6f492f049cf, findElement {value=app_logo, using=class name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 138.0.4, moz:accessibilityChecks: false, moz:buildID: 20250517143237, moz:geckodriverVersion: 0.36.0, moz:headless: true, moz:platformVersion: 10.0, moz:processID: 33288, moz:profile: C:\Users\Admin\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: e63d9f1f-b08e-4562-870e-f6f492f049cf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: .app_logo
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.32.0', revision: 'd17c8aa950'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [e63d9f1f-b08e-4562-870e-f6f492f049cf, findElement {value=app_logo, using=class name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 138.0.4, moz:accessibilityChecks: false, moz:buildID: 20250517143237, moz:geckodriverVersion: 0.36.0, moz:headless: true, moz:platformVersion: 10.0, moz:processID: 33288, moz:profile: C:\Users\Admin\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: e63d9f1f-b08e-4562-870e-f6f492f049cf
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at com.practice.rough.FirstTest1.doLogin(FirstTest1.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.practice.rough.FirstTest1@4cc451f2]" started-at="2025-06-20T15:07:07 IST" name="quitBrowser" finished-at="2025-06-20T15:07:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.practice.rough.FirstTest1@4cc451f2]" started-at="2025-06-20T15:07:07 IST" name="removeLogger" finished-at="2025-06-20T15:07:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.practice.rough.FirstTest1@4cc451f2]" started-at="2025-06-20T15:07:20 IST" name="quitBrowser" finished-at="2025-06-20T15:07:21 IST" duration-ms="954" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.practice.rough.FirstTest1@4cc451f2]" started-at="2025-06-20T15:07:21 IST" name="removeLogger" finished-at="2025-06-20T15:07:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
      </class> <!-- com.practice.rough.FirstTest1 -->
      <class name="com.practice.rough.FirstTest2">
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.practice.rough.FirstTest2@6379eb]" started-at="2025-06-20T15:07:21 IST" name="setupLogger" finished-at="2025-06-20T15:07:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method signature="doLogin(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.practice.rough.FirstTest2@6379eb]" started-at="2025-06-20T15:07:21 IST" name="doLogin" data-provider="getData" finished-at="2025-06-20T15:07:24 IST" duration-ms="3129" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.practice.rough.FirstTest2@6379eb]" started-at="2025-06-20T15:07:24 IST" name="quitBrowser" finished-at="2025-06-20T15:07:24 IST" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.practice.rough.FirstTest2@6379eb]" started-at="2025-06-20T15:07:24 IST" name="removeLogger" finished-at="2025-06-20T15:07:24 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
        <test-method signature="doLogin(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.practice.rough.FirstTest2@6379eb]" started-at="2025-06-20T15:07:24 IST" name="doLogin" data-provider="getData" finished-at="2025-06-20T15:07:39 IST" duration-ms="14936" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: .app_logo
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.32.0', revision: 'd17c8aa950'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [820e7bff-f48a-46a4-8db2-9330598186a6, findElement {value=app_logo, using=class name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 138.0.4, moz:accessibilityChecks: false, moz:buildID: 20250517143237, moz:geckodriverVersion: 0.36.0, moz:headless: true, moz:platformVersion: 10.0, moz:processID: 23044, moz:profile: C:\Users\Admin\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 820e7bff-f48a-46a4-8db2-9330598186a6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: .app_logo
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.32.0', revision: 'd17c8aa950'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [820e7bff-f48a-46a4-8db2-9330598186a6, findElement {value=app_logo, using=class name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 138.0.4, moz:accessibilityChecks: false, moz:buildID: 20250517143237, moz:geckodriverVersion: 0.36.0, moz:headless: true, moz:platformVersion: 10.0, moz:processID: 23044, moz:profile: C:\Users\Admin\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 820e7bff-f48a-46a4-8db2-9330598186a6
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at com.practice.rough.FirstTest2.doLogin(FirstTest2.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.practice.rough.FirstTest2@6379eb]" started-at="2025-06-20T15:07:24 IST" name="setupLogger" finished-at="2025-06-20T15:07:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.practice.rough.FirstTest2@6379eb]" started-at="2025-06-20T15:07:39 IST" name="quitBrowser" finished-at="2025-06-20T15:07:40 IST" duration-ms="878" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method signature="testFail(java.lang.String)[pri:0, instance:com.practice.rough.FirstTest2@6379eb]" started-at="2025-06-20T15:07:40 IST" name="testFail" finished-at="2025-06-20T15:07:42 IST" duration-ms="1758" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Deliberate fail]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Deliberate fail
at org.testng.Assert.fail(Assert.java:110)
at com.practice.rough.FirstTest2.testFail(FirstTest2.java:61)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFail -->
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.practice.rough.FirstTest2@6379eb]" started-at="2025-06-20T15:07:40 IST" name="setupLogger" finished-at="2025-06-20T15:07:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.practice.rough.FirstTest2@6379eb]" started-at="2025-06-20T15:07:40 IST" name="removeLogger" finished-at="2025-06-20T15:07:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.practice.rough.FirstTest2@6379eb]" started-at="2025-06-20T15:07:42 IST" name="quitBrowser" finished-at="2025-06-20T15:07:42 IST" duration-ms="150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.practice.rough.FirstTest2@6379eb]" started-at="2025-06-20T15:07:42 IST" name="removeLogger" finished-at="2025-06-20T15:07:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
      </class> <!-- com.practice.rough.FirstTest2 -->
      <class name="com.practice.rough.FirstTest3">
        <test-method signature="doLogin(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.practice.rough.FirstTest3@294425a7]" started-at="2025-06-20T15:07:42 IST" name="doLogin" data-provider="getData" finished-at="2025-06-20T15:07:45 IST" duration-ms="3250" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.practice.rough.FirstTest3@294425a7]" started-at="2025-06-20T15:07:42 IST" name="setupLogger" finished-at="2025-06-20T15:07:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method signature="doLogin(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.practice.rough.FirstTest3@294425a7]" started-at="2025-06-20T15:07:45 IST" name="doLogin" data-provider="getData" finished-at="2025-06-20T15:07:50 IST" duration-ms="4642" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[visual_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.practice.rough.FirstTest3@294425a7]" started-at="2025-06-20T15:07:45 IST" name="setupLogger" finished-at="2025-06-20T15:07:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.practice.rough.FirstTest3@294425a7]" started-at="2025-06-20T15:07:45 IST" name="removeLogger" finished-at="2025-06-20T15:07:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.practice.rough.FirstTest3@294425a7]" started-at="2025-06-20T15:07:45 IST" name="quitBrowser" finished-at="2025-06-20T15:07:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.practice.rough.FirstTest3@294425a7]" started-at="2025-06-20T15:07:50 IST" name="quitBrowser" finished-at="2025-06-20T15:07:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.practice.rough.FirstTest3@294425a7]" started-at="2025-06-20T15:07:50 IST" name="removeLogger" finished-at="2025-06-20T15:07:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
      </class> <!-- com.practice.rough.FirstTest3 -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
