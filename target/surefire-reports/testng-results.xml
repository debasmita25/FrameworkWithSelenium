<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="9" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-18T22:07:49 IST" name="Suite" finished-at="2025-06-18T22:08:09 IST" duration-ms="19324">
    <groups>
    </groups>
    <test started-at="2025-06-18T22:07:49 IST" name="Test1" finished-at="2025-06-18T22:08:04 IST" duration-ms="14621">
      <class name="com.saucelab.test.TestClass1">
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.saucelab.test.TestClass1@56620197]" started-at="2025-06-18T22:07:50 IST" name="setupLogger" finished-at="2025-06-18T22:07:50 IST" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method is-config="true" signature="setUpEnv(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.saucelab.test.TestClass1@56620197]" started-at="2025-06-18T22:07:50 IST" name="setUpEnv" finished-at="2025-06-18T22:07:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpEnv -->
        <test-method signature="doLogin(java.util.HashMap)[pri:0, instance:com.saucelab.test.TestClass1@56620197]" started-at="2025-06-18T22:07:50 IST" name="doLogin" data-provider="getData" finished-at="2025-06-18T22:07:56 IST" duration-ms="5837" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{runmode=y, password=secret_sauce, test_name=To verify Login feature is working fine, username=standard_user}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.saucelab.test.TestClass1@56620197]" started-at="2025-06-18T22:07:56 IST" name="quitBrowser" finished-at="2025-06-18T22:07:56 IST" duration-ms="565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.saucelab.test.TestClass1@56620197]" started-at="2025-06-18T22:07:56 IST" name="removeLogger" finished-at="2025-06-18T22:07:56 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.saucelab.test.TestClass1@56620197]" started-at="2025-06-18T22:07:56 IST" name="setupLogger" finished-at="2025-06-18T22:07:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method is-config="true" signature="setUpEnv(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.saucelab.test.TestClass1@56620197]" started-at="2025-06-18T22:07:56 IST" name="setUpEnv" finished-at="2025-06-18T22:07:56 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpEnv -->
        <test-method signature="doLogin(java.util.HashMap)[pri:0, instance:com.saucelab.test.TestClass1@56620197]" started-at="2025-06-18T22:07:56 IST" name="doLogin" data-provider="getData" finished-at="2025-06-18T22:08:01 IST" duration-ms="4588" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{runmode=y, password=secret_sauce, test_name=To verify Login feature is working fine, username=visual_user}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.saucelab.test.TestClass1@56620197]" started-at="2025-06-18T22:08:01 IST" name="quitBrowser" finished-at="2025-06-18T22:08:01 IST" duration-ms="389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.saucelab.test.TestClass1@56620197]" started-at="2025-06-18T22:08:01 IST" name="removeLogger" finished-at="2025-06-18T22:08:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
      </class> <!-- com.saucelab.test.TestClass1 -->
      <class name="com.saucelab.test.FailedTestClass">
        <test-method signature="testFail()[pri:0, instance:com.saucelab.test.FailedTestClass@6aba2b86]" started-at="2025-06-18T22:08:01 IST" name="testFail" finished-at="2025-06-18T22:08:04 IST" duration-ms="2477" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Deliberate fail]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Deliberate fail
at org.testng.Assert.fail(Assert.java:110)
at com.saucelab.test.FailedTestClass.testFail(FailedTestClass.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFail -->
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.saucelab.test.FailedTestClass@6aba2b86]" started-at="2025-06-18T22:08:01 IST" name="setupLogger" finished-at="2025-06-18T22:08:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.saucelab.test.FailedTestClass@6aba2b86]" started-at="2025-06-18T22:08:04 IST" name="quitBrowser" finished-at="2025-06-18T22:08:04 IST" duration-ms="320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.saucelab.test.FailedTestClass@6aba2b86]" started-at="2025-06-18T22:08:04 IST" name="removeLogger" finished-at="2025-06-18T22:08:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
      </class> <!-- com.saucelab.test.FailedTestClass -->
    </test> <!-- Test1 -->
    <test started-at="2025-06-18T22:07:49 IST" name="Test2" finished-at="2025-06-18T22:08:04 IST" duration-ms="14896">
      <class name="com.saucelab.test.TestClass1">
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.saucelab.test.TestClass1@16293aa2]" started-at="2025-06-18T22:07:50 IST" name="setupLogger" finished-at="2025-06-18T22:07:50 IST" duration-ms="534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method is-config="true" signature="setUpEnv(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.saucelab.test.TestClass1@16293aa2]" started-at="2025-06-18T22:07:50 IST" name="setUpEnv" finished-at="2025-06-18T22:07:50 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpEnv -->
        <test-method signature="doLogin(java.util.HashMap)[pri:0, instance:com.saucelab.test.TestClass1@16293aa2]" started-at="2025-06-18T22:07:50 IST" name="doLogin" data-provider="getData" finished-at="2025-06-18T22:07:57 IST" duration-ms="7015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{runmode=y, password=secret_sauce, test_name=To verify Login feature is working fine, username=standard_user}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.saucelab.test.TestClass1@16293aa2]" started-at="2025-06-18T22:07:57 IST" name="quitBrowser" finished-at="2025-06-18T22:07:59 IST" duration-ms="1463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.saucelab.test.TestClass1@16293aa2]" started-at="2025-06-18T22:07:59 IST" name="removeLogger" finished-at="2025-06-18T22:07:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.saucelab.test.TestClass1@16293aa2]" started-at="2025-06-18T22:07:59 IST" name="setupLogger" finished-at="2025-06-18T22:07:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method is-config="true" signature="setUpEnv(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.saucelab.test.TestClass1@16293aa2]" started-at="2025-06-18T22:07:59 IST" name="setUpEnv" finished-at="2025-06-18T22:07:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpEnv -->
        <test-method signature="doLogin(java.util.HashMap)[pri:0, instance:com.saucelab.test.TestClass1@16293aa2]" started-at="2025-06-18T22:07:59 IST" name="doLogin" data-provider="getData" finished-at="2025-06-18T22:08:03 IST" duration-ms="4231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{runmode=y, password=secret_sauce, test_name=To verify Login feature is working fine, username=visual_user}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.saucelab.test.TestClass1@16293aa2]" started-at="2025-06-18T22:08:03 IST" name="quitBrowser" finished-at="2025-06-18T22:08:04 IST" duration-ms="1581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.saucelab.test.TestClass1@16293aa2]" started-at="2025-06-18T22:08:04 IST" name="removeLogger" finished-at="2025-06-18T22:08:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
      </class> <!-- com.saucelab.test.TestClass1 -->
    </test> <!-- Test2 -->
    <test started-at="2025-06-18T22:07:49 IST" name="Test3" finished-at="2025-06-18T22:08:09 IST" duration-ms="19324">
      <class name="com.saucelab.test.TestClass1">
        <test-method is-config="true" signature="initializeExtentReport()[pri:0, instance:com.saucelab.test.TestClass1@72d1ad2e]" started-at="2025-06-18T22:07:49 IST" name="initializeExtentReport" finished-at="2025-06-18T22:07:49 IST" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeExtentReport -->
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.saucelab.test.TestClass1@72d1ad2e]" started-at="2025-06-18T22:07:50 IST" name="setupLogger" finished-at="2025-06-18T22:07:50 IST" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method is-config="true" signature="setUpEnv(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.saucelab.test.TestClass1@72d1ad2e]" started-at="2025-06-18T22:07:50 IST" name="setUpEnv" finished-at="2025-06-18T22:07:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpEnv -->
        <test-method signature="doLogin(java.util.HashMap)[pri:0, instance:com.saucelab.test.TestClass1@72d1ad2e]" started-at="2025-06-18T22:07:50 IST" name="doLogin" data-provider="getData" finished-at="2025-06-18T22:07:59 IST" duration-ms="9752" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{runmode=y, password=secret_sauce, test_name=To verify Login feature is working fine, username=standard_user}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.saucelab.test.TestClass1@72d1ad2e]" started-at="2025-06-18T22:07:59 IST" name="quitBrowser" finished-at="2025-06-18T22:08:01 IST" duration-ms="1826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="setupLogger()[pri:0, instance:com.saucelab.test.TestClass1@72d1ad2e]" started-at="2025-06-18T22:08:01 IST" name="setupLogger" finished-at="2025-06-18T22:08:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogger -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.saucelab.test.TestClass1@72d1ad2e]" started-at="2025-06-18T22:08:01 IST" name="removeLogger" finished-at="2025-06-18T22:08:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
        <test-method signature="doLogin(java.util.HashMap)[pri:0, instance:com.saucelab.test.TestClass1@72d1ad2e]" started-at="2025-06-18T22:08:01 IST" name="doLogin" data-provider="getData" finished-at="2025-06-18T22:08:08 IST" duration-ms="6563" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{runmode=y, password=secret_sauce, test_name=To verify Login feature is working fine, username=visual_user}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="setUpEnv(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.saucelab.test.TestClass1@72d1ad2e]" started-at="2025-06-18T22:08:01 IST" name="setUpEnv" finished-at="2025-06-18T22:08:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpEnv -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.saucelab.test.TestClass1@72d1ad2e]" started-at="2025-06-18T22:08:08 IST" name="quitBrowser" finished-at="2025-06-18T22:08:09 IST" duration-ms="904" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="removeLogger()[pri:0, instance:com.saucelab.test.TestClass1@72d1ad2e]" started-at="2025-06-18T22:08:09 IST" name="removeLogger" finished-at="2025-06-18T22:08:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLogger -->
        <test-method is-config="true" signature="flushExtentReport()[pri:0, instance:com.saucelab.test.TestClass1@72d1ad2e]" started-at="2025-06-18T22:08:09 IST" name="flushExtentReport" finished-at="2025-06-18T22:08:09 IST" duration-ms="305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushExtentReport -->
      </class> <!-- com.saucelab.test.TestClass1 -->
    </test> <!-- Test3 -->
  </suite> <!-- Suite -->
</testng-results>
